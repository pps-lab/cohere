# source: https://github.com/BamPeers/rust-ci-github-actions-workflow

on:
  pull_request:
  push:
    branches:
      - main


name: Check and Lint

env:
  GUROBI_DOWNLOAD: https://packages.gurobi.com/9.5/gurobi9.5.1_linux64.tar.gz
  GUROBI_DEST: /opt
  GUROBI_HOME: /opt/gurobi951/linux64
  LD_LIBRARY_PATH: /opt/gurobi951/linux64/lib

defaults:
  run:
    working-directory: ./dp-planner

jobs:
  check:
    name: Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Download and Unarchive Gurobi
        run: curl -o ~/gurobi.tar.gz $GUROBI_DOWNLOAD && tar -xvf ~/gurobi.tar.gz -C $GUROBI_DEST

      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: 1.65 # stable
          override: true

      - uses: actions-rs/cargo@v1
        with:
          command: check
          use-cross: false
          args: --manifest-path dp-planner/Cargo.toml

  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Download and Unarchive Gurobi
        run: curl -o ~/gurobi.tar.gz $GUROBI_DOWNLOAD && tar -xvf ~/gurobi.tar.gz -C $GUROBI_DEST
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: 1.65 #stable
          override: true

      - run: rustup component add rustfmt --toolchain 1.65-x86_64-unknown-linux-gnu #rustup component add rustfmt
      - uses: actions-rs/cargo@v1
        with:
          command: fmt
          use-cross: false
          args: --manifest-path dp-planner/Cargo.toml --all -- --check

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Download and Unarchive Gurobi
        run: curl -o ~/gurobi.tar.gz $GUROBI_DOWNLOAD && tar -xvf ~/gurobi.tar.gz -C $GUROBI_DEST
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: 1.65 #stable
          components: clippy
          override: true

      - uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --manifest-path dp-planner/Cargo.toml --all-features
          name: Clippy Output
